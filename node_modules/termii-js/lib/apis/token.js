/**
 * ----------------------------------------------------------------
 * This file is part of the Termii JS SDK.
 * A Node.js wrapper made for Termii API.
 * For more information, visit: https://developer.termii.com
 *
 * (c) Sylvanus Etim <iamprincesly@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 * ----------------------------------------------------------------
 */
const contants = require('../helpers/contants');
const utils = require('../helpers/utils');
const TermiiError = require('../exception/TermiiError');

const token = {};

var defaultOption = {
    message_type: 'NUMERIC',
    to: 'eg. 2348109077743',
    from: 'Aproved Sender or Device IDs',
    channel: 'dnd',
    pin_attempts: 10,
    pin_time_to_live: 5,
    pin_length: 6,
    pin_placeholder: '< 1234 >',
    message_text: 'Your pin is < 1234 >',
    pin_type: 'NUMERIC',
};

token.setOptions = function (opts) {
    let options;

    if (opt) {
        if (!utils.isObject(options)) {
            throw new TermiiError('setOption method takes an object');
        }

        const timeToLive = utils.validatePinTimeToLive(options.time_to_live);
        const length = utils.validatePinLength(options.length);
        const pinType = utils.validatePinAndMessageType(options.pin_type);
        const messageType = utils.validatePinAndMessageType(
            options.message_type
        );
        const channel = utils.validateChannel(options.channel);

        options = {
            channel: channel,
            pin_time_to_live: timeToLive,
            pin_length: length,
            pin_type: pinType,
            pin_placeholder: placeholder,
            pin_attempts: attempts,
        };

    } else {
        options = defaultOption;
    }

    if (utils.isEmptyString(options.placeholder)) {
        throw new TermiiError(
            "'placeholder' must be a string example: < 1234 >"
        );
    }

    if (length && isValidNumberLength(length, 4, 8)) {
        throw new TermiiError("'length' must be between 4 and 8");
    }

    var defaultOption = {
        channel: options.channel || constant.CHANNEL,
        pin_time_to_live: options.time_to_live || constant.PIN_TIME_TO_LIVE,
        pin_length: options.length || contants.PIN_LENGTH,
        pin_type: options.type || constant.PIN_TYPE,
        pin_placeholder: options.placeholder || contants.PIN_PLACEHOLDER,
        pin_attempts: options.attempts || contants.PIN_ATTEMPTS,
    };

    const optionData = [
        'channel',
        'pin_attempts',
        'pin_time_to_live',
        'pin_length',
        'pin_placeholder',
        'pin_type',
    ];

    if (!optionData.includes(options.key)) {
        throw new TermiiError('');
    }
    return {};
};
